plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.2.0'
}

group = 'com.golabab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

String imageName = "${project.name}:${project.version}"
Integer port = 10010

jib {
    allowInsecureRegistries = true
    to {
        image = imageName
    }
    container {
        ports = [port as String]
        getLabels().put('maintainer', 'raul')
    }
}

task runDockerLocal () {
    dependsOn('jibDockerBuild')
    doLast {
        def containerName = "$project.name" as String
        def networkName = 'golabab-infra'
        def networkIp = '172.19.0.101'
        def envFilePath = "$project.projectDir\\.env" as String

        exec{ commandLine "docker stop $containerName".split(' ') }
        exec{ commandLine "docker rm $containerName".split(' ') }
        exec{ commandLine "docker run -d -p $port:$port --env-file $envFilePath --network $networkName --ip $networkIp --name $containerName $imageName".split(' ') }

        System.out.println('\n Docker Build SUCCESS!')
    }
}